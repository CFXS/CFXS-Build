local USE_GCC = true

if(USE_GCC) then
    import("./.cfxs/GCC.cfxs-build")
else
    import("./.cfxs/IAR.cfxs-build")
end
import("./.cfxs/Cortex_M4F.cfxs-build")

local test_project = create_executable("CFXS-Build-Test")
test_project:set_linker_script("./LinkerScript.ld")

function actually_import_modules()
    import("./modules/Module_A")
end

function import_modules()
    actually_import_modules()
end

import_modules()

-- import("/mnt/d/cfxs_ext_module")

local sources = {
    "./src/**.c", -- current dir + recursive search
    "./src/main.cpp", -- single file
    "!makefsdata.c" -- full path matching exclude (path.contains(exclude_entry))
}

test_project:add_sources(sources)
test_project:add_include_paths("private", {"./src"})

import_git("https://github.com/CFXS/CFXS-Framework-v2-Dev.git", "main");

test_project:add_libraries({
    cfxs_framework,
})
